/* automatically generated by rust-bindgen 0.69.4 */

extern "C" {
    #[must_use]
    pub fn RtlIntegerToUnicodeString(
        Value: ULONG,
        Base: ULONG,
        String: PUNICODE_STRING,
    ) -> NTSTATUS;
}
extern "C" {
    #[must_use]
    pub fn RtlInt64ToUnicodeString(
        Value: ULONGLONG,
        Base: ULONG,
        String: PUNICODE_STRING,
    ) -> NTSTATUS;
}
extern "C" {
    #[must_use]
    pub fn RtlUnicodeStringToInteger(
        String: PCUNICODE_STRING,
        Base: ULONG,
        Value: PULONG,
    ) -> NTSTATUS;
}
extern "C" {
    #[must_use]
    pub fn RtlUnicodeStringToInt64(
        String: PCUNICODE_STRING,
        Base: ULONG,
        Number: PLONG64,
        EndPointer: *mut PWSTR,
    ) -> NTSTATUS;
}
extern "C" {
    pub fn RtlInitUnicodeString(
        DestinationString: PUNICODE_STRING,
        SourceString: PCWSTR,
    );
}
extern "C" {
    pub fn RtlCompareUnicodeStrings(
        String1: PCWCH,
        String1Length: SIZE_T,
        String2: PCWCH,
        String2Length: SIZE_T,
        CaseInSensitive: BOOLEAN,
    ) -> LONG;
}
extern "C" {
    pub fn RtlCompareUnicodeString(
        String1: PCUNICODE_STRING,
        String2: PCUNICODE_STRING,
        CaseInSensitive: BOOLEAN,
    ) -> LONG;
}
extern "C" {
    pub fn RtlEqualUnicodeString(
        String1: PCUNICODE_STRING,
        String2: PCUNICODE_STRING,
        CaseInSensitive: BOOLEAN,
    ) -> BOOLEAN;
}
extern "C" {
    pub fn RtlCopyUnicodeString(
        DestinationString: PUNICODE_STRING,
        SourceString: PCUNICODE_STRING,
    );
}
extern "C" {
    #[must_use]
    pub fn RtlAppendUnicodeStringToString(
        Destination: PUNICODE_STRING,
        Source: PCUNICODE_STRING,
    ) -> NTSTATUS;
}
extern "C" {
    #[must_use]
    pub fn RtlAppendUnicodeToString(
        Destination: PUNICODE_STRING,
        Source: PCWSTR,
    ) -> NTSTATUS;
}
extern "C" {
    pub fn RtlFreeUnicodeString(UnicodeString: PUNICODE_STRING);
}
extern "C" {
    pub fn DbgPrintEx(ComponentId: ULONG, Level: ULONG, Format: PCSTR, ...) -> ULONG;
}
extern "C" {
    pub fn RtlAssert(
        FailedAssertion: PVOID,
        FileName: PVOID,
        LineNumber: ULONG,
        Message: PSTR,
    );
}
extern "C" {
    #[must_use]
    pub fn FxDriverEntryUm(
        LoaderInterface: PVOID,
        Context: PVOID,
        DriverObject: PVOID,
        RegistryPath: PUNICODE_STRING,
    ) -> NTSTATUS;
}
